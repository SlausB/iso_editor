/// @cond
package actions 
{
	
	/// @endcond
	
    /** \brief Абстрактный тип переменной. Для возможности передачи параметров любого типа в ActionDesc . Обычно представляется как вещественное число.
    \details ActionDesc представляет из себя функцию-действие, которое нужно совершить, и вектор параметров, которые являются типом вещественного числа. Но для некоторых действий нужны параметры других типов.\n
    Хранит указатель на данные, которые интерпретируются по-умолчанию как вещественное число.*/
	public class AbstractData 
	{
		/** \brief Конструктор.
		\details Создание data как вещественное число.
		\param value Величина, которая будет присвоена данным как вещественное число.*/
		public function AbstractData(value:Number = -1.0)
		{
			this.data = value;
		}
		
		/** \brief Копирование указанных данных.
		\details Если оба объекта являются данными типа вещественного числа, то будет простое присвоение значение.\n
		Если только текущие данные являются типом вещественного числа, то они будут удалены, а указатель на данные приравняеются у указателю на данные объекта abstractData .
		Если только указанные данные являются типом вещественного числа, то значение будет приравнено к данным типа вещественного числа указанного объекта ( abstractData ).*/
		public function Copy(abstractData:AbstractData): void
		{
			data = abstractData.data;
		}
		
		/** \brief Установка новых данных. Предыдущие будут удалены.
		\details data будут помечены как данные, <b>не</b> являющиеся типом вещественного числа.\n
		Для установки переменной типа вещественного числа нужно использовать соответствующие операторы или установить данные посредством SetData() и указать что это вещественное число посредством DataIsInFloatTypeAgain().
		\sa operator=() */
		public function SetData(data:*): void
		{
			this.data = data;
		}
		
		/** \brief Получение текущих данных.
		\details void* - это указатель на данные, которые используются во всех операторах (идёт работа как с double), а также эти данные будут удалены в деструкторе или в SetData() если они являются типом double, поэтому при удалении этим данных после получения возникнет ошибка сегментации.*/
		public function GetData(): *
		{
			return data;
		}
		
		/** \brief Получение данных как вещественное число. Если данные НЕ являются типом вещественного числа, то возвращает -1.*/
		public function AsFloat(): Number
		{
			if (data is Number)
			{
				return data as Number;
			}
			return -1.0;
		}
		
		/** Установить данные в указанное вещественное число, незивисимо от какого типа они в данный момент.
		\return Указанные же данные.*/
		public function ToFloat(value:Number): Number
		{
			this.data = value;
			return (this.data as Number);
		}
		
		
		/** \brief Указатель на данные, которые в конструкторе создаются как вещественное число.*/
		private var data:*;
	}

}